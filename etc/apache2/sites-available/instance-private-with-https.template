<VirtualHost *:80>
    ServerName  ${DEPLOYMENT_EXT_HOST}
    ServerAlias ${DEPLOYMENT_APACHE_VHOST_ALIAS}

    Include ${APACHE_CONF_DIR}/includes/${DEPLOYMENT_EXT_HOST}.include

    # No security for gadgets
    <ProxyMatch "^.*/(eXoGadgetServer|exo-gadget-resources|rest|.*Resources)/.*$">
        Order allow,deny
        Allow from all
        Satisfy any
    </ProxyMatch>

    # No security for chat local access
    <ProxyMatch "^.*/chatServer/.*$">
        Order deny,allow
        Deny from all
        Allow from exoplatform.org
        Satisfy any
    </ProxyMatch>

    # Everything else is secured
    <Proxy *>
        <IfModule authnz_crowd_module>
            Order deny,allow
            Allow from all

            AuthName "eXo Employees only"
            AuthType Basic
            AuthBasicProvider crowd

            CrowdAppName ${CROWD_ACCEPTANCE_APP_NAME}
            CrowdAppPassword ${CROWD_ACCEPTANCE_APP_PASSWORD}
            CrowdURL https://identity.exoplatform.org/

            # Activate SSO
            CrowdAcceptSSO On
            CrowdCreateSSO On

            # Only exo-employees can access
            Require group exo-employees
        </IfModule>
        <IfModule !authnz_crowd_module>
            Require all denied

            AuthName "eXo Employees only"
            AuthType Basic
            AuthBasicProvider ldap

            AuthLDAPBindDN          "${LDAP_ACCEPTANCE_BIND_DN}"
            AuthLDAPBindPassword    ${LDAP_ACCEPTANCE_BIND_PASSWORD}
            AuthLDAPURL ldaps://ldap2.exoplatform.org/ou=users,ou=portal,dc=exoplatform,dc=org?cn
            <RequireAll>
                Require    ldap-group cn=exo-employees,ou=groups,dc=exoplatform,dc=org
                AuthLDAPMaxSubGroupDepth 1
            </RequireAll>
        </IfModule>
    </Proxy>
</VirtualHost>

<VirtualHost *:443>
    ServerName  ${DEPLOYMENT_EXT_HOST}
    ServerAlias ${DEPLOYMENT_APACHE_VHOST_ALIAS}

    Include ${APACHE_CONF_DIR}/includes/${DEPLOYMENT_EXT_HOST}.include

    # No security for gadgets
    <ProxyMatch "^.*/(eXoGadgetServer|exo-gadget-resources|rest|.*Resources)/.*$">
        Order allow,deny
        Allow from all
        Satisfy any
    </ProxyMatch>

    # No security for chat local access
    <ProxyMatch "^.*/chatServer/.*$">
        Order deny,allow
        Deny from all
        Allow from exoplatform.org
        Satisfy any
    </ProxyMatch>

    # Everything else is secured
    <Proxy *>
        <IfModule authnz_crowd_module>
            Order deny,allow
            Allow from all

            AuthName "eXo Employees only"
            AuthType Basic
            AuthBasicProvider crowd

            CrowdAppName ${CROWD_ACCEPTANCE_APP_NAME}
            CrowdAppPassword ${CROWD_ACCEPTANCE_APP_PASSWORD}
            CrowdURL https://identity.exoplatform.org/

            # Activate SSO
            CrowdAcceptSSO On
            CrowdCreateSSO On

            # Only exo-employees can access
            Require group exo-employees
        </IfModule>
        <IfModule !authnz_crowd_module>
            Require all denied

            AuthName "eXo Employees only"
            AuthType Basic
            AuthBasicProvider ldap

            AuthLDAPBindDN          "${LDAP_ACCEPTANCE_BIND_DN}"
            AuthLDAPBindPassword    ${LDAP_ACCEPTANCE_BIND_PASSWORD}
            AuthLDAPURL ldaps://ldap2.exoplatform.org/ou=users,ou=portal,dc=exoplatform,dc=org?cn
            <RequireAll>
                Require    ldap-group cn=exo-employees,ou=groups,dc=exoplatform,dc=org
                AuthLDAPMaxSubGroupDepth 1
            </RequireAll>
        </IfModule>
    </Proxy>

    #####################
    # SSL configuration
    #####################
    SSLEngine             on
    SSLCertificateFile       ${APACHE_SSL_CERTIFICATE_FILE}
    SSLCertificateKeyFile    ${APACHE_SSL_CERTIFICATE_KEY_FILE}
    SSLCertificateChainFile  ${APACHE_SSL_CERTIFICATE_CHAIN_FILE}
    SSLVerifyClient None

    # configuration du SSL
    SSLCipherSuite          ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
    SSLProtocol             all -SSLv2 -SSLv3
    SSLHonorCipherOrder     on

    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory /usr/lib/cgi-bin>
        SSLOptions +StdEnvVars
    </Directory>
    BrowserMatch "MSIE [2-6]" \
        nokeepalive ssl-unclean-shutdown \
        downgrade-1.0 force-response-1.0
    # MSIE 7 and newer should be able to use keepalive
    BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

</VirtualHost>
